[{"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\App.tsx":"1","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\styles\\global.ts":"2","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\SignIn\\index.tsx":"3","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\SignIn\\styles.ts":"4","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\Button\\styles.ts":"5","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\Input\\index.tsx":"6","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\Input\\styles.ts":"7","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\SignUp\\index.tsx":"8","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\Button\\index.tsx":"9","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\utils\\getValidationErrors.ts":"10","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\Tooltip\\index.tsx":"11","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\Tooltip\\styles.ts":"12","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\ToastContainer\\index.tsx":"13","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\ToastContainer\\styles.ts":"14","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\hooks\\ToastContext.tsx":"15","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\ToastContainer\\Toast\\index.tsx":"16","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\ToastContainer\\Toast\\styles.ts":"17","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\SignUp\\styles.ts":"18","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\routes\\index.tsx":"19","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\routes\\Route.tsx":"20","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\hooks\\AuthContext.tsx":"21","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Forgot\\index.tsx":"22","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Reset\\styles.ts":"23","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Reset\\index.tsx":"24","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Dashboard\\styles.ts":"25","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Dashboard\\index.tsx":"26","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Profile\\styles.ts":"27","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Profile\\index.tsx":"28"},{"size":350,"mtime":1611329557162,"results":"29","hashOfConfig":"30"},{"size":553,"mtime":1611175078752,"results":"31","hashOfConfig":"30"},{"size":3018,"mtime":1611336622435,"results":"32","hashOfConfig":"30"},{"size":1725,"mtime":1611329977841,"results":"33","hashOfConfig":"30"},{"size":425,"mtime":1611240946620,"results":"34","hashOfConfig":"30"},{"size":1850,"mtime":1611413354983,"results":"35","hashOfConfig":"30"},{"size":1262,"mtime":1611256230882,"results":"36","hashOfConfig":"30"},{"size":3153,"mtime":1611331781306,"results":"37","hashOfConfig":"30"},{"size":432,"mtime":1611336721082,"results":"38","hashOfConfig":"30"},{"size":345,"mtime":1611336867837,"results":"39","hashOfConfig":"30"},{"size":377,"mtime":1611255842303,"results":"40","hashOfConfig":"30"},{"size":935,"mtime":1611256541326,"results":"41","hashOfConfig":"30"},{"size":1052,"mtime":1611329000372,"results":"42","hashOfConfig":"30"},{"size":183,"mtime":1611327242835,"results":"43","hashOfConfig":"30"},{"size":1552,"mtime":1611326961910,"results":"44","hashOfConfig":"30"},{"size":1315,"mtime":1611336831844,"results":"45","hashOfConfig":"30"},{"size":1394,"mtime":1611336810162,"results":"46","hashOfConfig":"30"},{"size":1722,"mtime":1611330044088,"results":"47","hashOfConfig":"30"},{"size":478,"mtime":1611330902413,"results":"48","hashOfConfig":"30"},{"size":1012,"mtime":1611331391430,"results":"49","hashOfConfig":"30"},{"size":2394,"mtime":1611423534867,"results":"50","hashOfConfig":"30"},{"size":3102,"mtime":1611339552262,"results":"51","hashOfConfig":"30"},{"size":1725,"mtime":1611337370662,"results":"52","hashOfConfig":"30"},{"size":3265,"mtime":1611338420983,"results":"53","hashOfConfig":"30"},{"size":5769,"mtime":1611412664498,"results":"54","hashOfConfig":"30"},{"size":10360,"mtime":1611412572213,"results":"55","hashOfConfig":"30"},{"size":2111,"mtime":1611422529535,"results":"56","hashOfConfig":"30"},{"size":6665,"mtime":1611450860388,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1mw4c6s",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\App.tsx",[],["119","120"],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\styles\\global.ts",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\SignIn\\index.tsx",[],["121","122"],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\Button\\styles.ts",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\Input\\index.tsx",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\Input\\styles.ts",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\SignUp\\index.tsx",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\Button\\index.tsx",["123"],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\utils\\getValidationErrors.ts",[],["124","125"],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\Tooltip\\index.tsx",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\Tooltip\\styles.ts",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\hooks\\ToastContext.tsx",[],["126","127"],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\components\\ToastContainer\\Toast\\styles.ts",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\routes\\index.tsx",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\routes\\Route.tsx",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\hooks\\AuthContext.tsx",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Forgot\\index.tsx",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Reset\\styles.ts",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Reset\\index.tsx",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Dashboard\\index.tsx",["128"],"import React, { useState, useCallback, useEffect, useMemo } from 'react';\r\nimport { isToday, format, parseISO, isAfter } from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\nimport DayPicker, { DayModifiers } from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\nimport { Avatar } from \"baseui/avatar\";\r\n\r\nimport { useAuth } from '../../hooks/AuthContext';\r\n\r\nimport logo from '../../assets/logo.svg';\r\nimport { FiClock, FiPower } from 'react-icons/fi';\r\n\r\nimport {\r\n    Container,\r\n    Header,\r\n    HeaderContent,\r\n    Profile,\r\n    Image,\r\n    Content,\r\n    Schedule,\r\n    NextAppointment,\r\n    Calendar,\r\n    Section,\r\n    Appointment\r\n} from './styles';\r\nimport api from '../../services/api';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface MonthAvailabilityItem {\r\n    day: number;\r\n    available: boolean;\r\n}\r\n\r\ninterface Appointment {\r\n    id: string;\r\n    date: string;\r\n    hourFormatted: string;\r\n    user: {\r\n        name: string;\r\n        avatar_url: string;\r\n    }\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n    const { user, signOut } = useAuth();\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [currentMonth, setCurrentMonth] = useState(new Date());\r\n    const [monthAvailability, setMonthAvailability] = useState<MonthAvailabilityItem[]>([]);\r\n    const [appointments, setAppointments] = useState<Appointment[]>([]);\r\n\r\n    const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\r\n        if (modifiers.available && !modifiers.disabled) {\r\n            setSelectedDate(day);\r\n        }\r\n    }, [])\r\n\r\n    const handleMonthChange = useCallback((month: Date) => {\r\n        setCurrentMonth(month);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        api.get(`/providers/${user.id}/month-availability`, {\r\n            params: {\r\n                year: currentMonth.getFullYear(),\r\n                month: currentMonth.getMonth() + 1,\r\n            }\r\n        }).then(response => {\r\n            setMonthAvailability(response.data)\r\n        })\r\n    }, [currentMonth, user.id])\r\n\r\n    useEffect(() => {\r\n        api.get<Appointment[]>('/appointments/me', {\r\n            params: {\r\n                year: selectedDate.getFullYear(),\r\n                month: selectedDate.getMonth() + 1,\r\n                day: selectedDate.getDate(),\r\n            }\r\n        }).then(response => {\r\n            const appointmentsFormatted = response.data.map(appointment => {\r\n                return {\r\n                    ...appointment,\r\n                    hourFormatted: format(parseISO(appointment.date), 'HH:mm'),\r\n                }\r\n            })\r\n\r\n            setAppointments(appointmentsFormatted);\r\n        })\r\n    }, [selectedDate])\r\n\r\n    const disabledDays = useMemo(() => {\r\n        const dates = monthAvailability\r\n            .filter(monthDay => monthDay.available === false)\r\n            .map(monthDay => {\r\n                const year = currentMonth.getFullYear();\r\n                const month = currentMonth.getMonth();\r\n                return new Date(year, month, monthDay.day);\r\n            });\r\n\r\n        return dates;\r\n    }, [currentMonth, monthAvailability]);\r\n\r\n    const selectedDateAsText = useMemo(() => {\r\n        return format(selectedDate, \"'Dia' dd 'de' MMMM\", {\r\n            locale: ptBR,\r\n        })\r\n    }, [selectedDate]);\r\n\r\n    const selectedWeekDay = useMemo(() => {\r\n        return format(selectedDate, 'cccc', {\r\n            locale: ptBR,\r\n        })\r\n    }, [selectedDate]);\r\n\r\n    const morningAppointments = useMemo(() => {\r\n        return appointments.filter(appointment => {\r\n            return parseISO(appointment.date).getHours() < 12;\r\n        })\r\n    }, [appointments]);\r\n\r\n    const afternoonAppointments = useMemo(() => {\r\n        return appointments.filter(appointment => {\r\n            return parseISO(appointment.date).getHours() >= 12;\r\n        })\r\n    }, [appointments]);\r\n\r\n    const nextAppointment = useMemo(() => {\r\n        return appointments.find(appointment =>\r\n            isAfter(parseISO(appointment.date), new Date()),\r\n        );\r\n    }, [appointments])\r\n\r\n    return (\r\n        <Container>\r\n            <Header>\r\n                <HeaderContent>\r\n                    <img src={logo} alt=\"AgendaENE\" />\r\n\r\n                    <Profile>\r\n                        <Image>\r\n                            <Avatar\r\n                                name={user.name}\r\n                                size=\"scale120\"\r\n                                src=\"https://api.adorable.io/avatars/285/10@adorable.io.png\"\r\n                                overrides={{\r\n                                    Initials: {\r\n                                        style: () => ({\r\n                                            backgroundColor: \"red\"\r\n                                        })\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Image>\r\n                        <div>\r\n                            <span>Bem-vindo,</span>\r\n                            <Link to=\"/profile\"><strong>{user.name}</strong></Link>\r\n                        </div>\r\n                    </Profile>\r\n\r\n                    <button type=\"button\" onClick={signOut}>\r\n                        <FiPower />\r\n                    </button>\r\n                </HeaderContent>\r\n            </Header>\r\n\r\n            <Content>\r\n                <Schedule>\r\n                    <h1>Horários agendados</h1>\r\n                    <p>\r\n                        {isToday(selectedDate) && (<span>Hoje</span>)}\r\n                        <span>{selectedDateAsText}</span>\r\n                        <span>{selectedWeekDay}</span>\r\n                    </p>\r\n\r\n                    {isToday(selectedDate) && nextAppointment && (\r\n                        <NextAppointment>\r\n                            <strong>Agendamento a seguir</strong>\r\n                            <div>\r\n                                <img\r\n                                    src={nextAppointment.user.avatar_url ? nextAppointment.user.avatar_url : \"https://avatars.githubusercontent.com/u/26776218?s=460&u=964b019741d54bdcd2d147c5dd86c4d495bf76dd&v=4\"}\r\n                                    alt={nextAppointment.user.name}\r\n                                />\r\n                                <strong>{nextAppointment.user.name}</strong>\r\n                                <span>\r\n                                    <FiClock />\r\n                                    {nextAppointment.hourFormatted}\r\n                                </span>\r\n                            </div>\r\n                        </NextAppointment>\r\n                    )}\r\n                    <Section>\r\n                        <strong>Manhã</strong>\r\n\r\n                        {morningAppointments.length === 0 && (\r\n                            <p>Nenhum agendamento neste período</p>\r\n                        )}\r\n\r\n                        {morningAppointments.map(appointment => (\r\n                            <Appointment key={appointment.id}>\r\n                                <span>\r\n                                    <FiClock />\r\n                                    {appointment.hourFormatted}\r\n                                </span>\r\n\r\n                                <div>\r\n                                    <img\r\n                                        src={appointment.user.avatar_url ? appointment.user.avatar_url : 'https://avatars.githubusercontent.com/u/26776218?s=460&u=964b019741d54bdcd2d147c5dd86c4d495bf76dd&v=4'}\r\n                                        alt={appointment.user.name}\r\n                                    />\r\n                                    <strong>{appointment.user.name}</strong>\r\n                                </div>\r\n                            </Appointment>\r\n                        ))}\r\n                    </Section>\r\n\r\n                    <Section>\r\n                        <strong>Tarde</strong>\r\n                        {afternoonAppointments.length === 0 && (\r\n                            <p>Nenhum agendamento neste período</p>\r\n                        )}\r\n\r\n                        {afternoonAppointments.map(appointment => (\r\n                            <Appointment key={appointment.id} >\r\n                                <span>\r\n                                    <FiClock />\r\n                                    {appointment.hourFormatted}\r\n                                </span>\r\n\r\n                                <div>\r\n                                    <img\r\n                                        src={appointment.user.avatar_url ? appointment.user.avatar_url : 'https://avatars.githubusercontent.com/u/26776218?s=460&u=964b019741d54bdcd2d147c5dd86c4d495bf76dd&v=4'}\r\n                                        alt={appointment.user.name}\r\n                                    />\r\n                                    <strong>{appointment.user.name}</strong>\r\n                                </div>\r\n                            </Appointment>\r\n                        ))}\r\n                    </Section>\r\n                </Schedule>\r\n                <Calendar>\r\n                    <DayPicker\r\n                        weekdaysShort={['D', 'S', 'T', 'Q', 'Q', 'S', 'S']}\r\n                        fromMonth={new Date()}\r\n                        disabledDays={[\r\n                            { daysOfWeek: [0, 6] }, ...disabledDays]}\r\n                        modifiers={{\r\n                            available: { daysOfWeek: [1, 2, 3, 4, 5] },\r\n                        }}\r\n                        onMonthChange={handleMonthChange}\r\n                        selectedDays={selectedDate}\r\n                        onDayClick={handleDateChange}\r\n                        months={[\r\n                            'Janeiro',\r\n                            'Fevereiro',\r\n                            'Março',\r\n                            'Abril',\r\n                            'Maio',\r\n                            'Junho',\r\n                            'Julho',\r\n                            'Agosto',\r\n                            'Setembro',\r\n                            'Outubro',\r\n                            'Novembro',\r\n                            'Dezembro',\r\n                        ]}\r\n                    />\r\n                </Calendar>\r\n            </Content>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Profile\\styles.ts",["129"],"C:\\Users\\Adm\\Desktop\\Projetos\\ReactJS\\Agenda-ENE\\src\\pages\\Profile\\index.tsx",["130"],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"131","replacedBy":"135"},{"ruleId":"133","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":17},{"ruleId":"131","replacedBy":"141"},{"ruleId":"133","replacedBy":"142"},{"ruleId":"131","replacedBy":"143"},{"ruleId":"133","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":34,"column":11,"nodeType":"139","messageId":"147","endLine":34,"endColumn":22},{"ruleId":"137","severity":1,"message":"148","line":1,"column":18,"nodeType":"139","messageId":"140","endLine":1,"endColumn":27},{"ruleId":"149","severity":1,"message":"150","line":112,"column":9,"nodeType":"151","endLine":112,"endColumn":28,"suggestions":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],"@typescript-eslint/no-unused-vars","'boolean' is defined but never used.","Identifier","unusedVar",["153"],["154"],["153"],["154"],"@typescript-eslint/no-redeclare","'Appointment' is already defined.","redeclared","'keyframes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'updateUser'. Either include it or remove the dependency array.","ArrayExpression",["155"],"no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},"Update the dependencies array to be: [addToast, history, updateUser]",{"range":"158","text":"159"},[3910,3929],"[addToast, history, updateUser]"]